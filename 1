Enter file contents here
## Put comments here that give an overall description of what your
## functions do

## Write a short comment describing this function: 

#makeCacheMatrix: This function creates an object (a special matrix) that can cache its inverse


makeCacheMatrix <- function(x = matrix()) {
  m <- NULL
  set <- function(y) {            
    x <<- y
    m <<- NULL
  }
  get <- function() x
  setinverse <- function(inverse) m <<- inverse
  getinverse <- function() m
  list(set = set, get = get,    
       setinverse = setinverse,
       getinverse = getinverse)
}


## Write a short comment describing this function:
#The cacheSolve function calculates the inverse of the special "matrix" created with the makeCacheMatrix function.
#First, it checks if the inverse has already been calculated. If so, it gets the inverse from the cache and skips the recalculation. 
#If the inverse has not been calculated before, it calculates it via setinverse function


cacheSolve <- function(x, ...) {
   m <- getinverse(x)
  if(!is.null(m)) {
  message("getting cached data")
  return(m)
}
    data <- x$get()
    m <- solve(data, ...)
    x$setinverse(m)
    m
}
